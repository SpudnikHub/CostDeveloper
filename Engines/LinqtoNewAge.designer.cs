#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Engines
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbNewAge")]
	public partial class LinqtoNewAgeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblAreaCost(tblAreaCost instance);
    partial void UpdatetblAreaCost(tblAreaCost instance);
    partial void DeletetblAreaCost(tblAreaCost instance);
    partial void InserttblVolumeCost(tblVolumeCost instance);
    partial void UpdatetblVolumeCost(tblVolumeCost instance);
    partial void DeletetblVolumeCost(tblVolumeCost instance);
    partial void InserttblAtlanticCanvasArea(tblAtlanticCanvasArea instance);
    partial void UpdatetblAtlanticCanvasArea(tblAtlanticCanvasArea instance);
    partial void DeletetblAtlanticCanvasArea(tblAtlanticCanvasArea instance);
    partial void InserttblAtlanticCanvasBussCost(tblAtlanticCanvasBussCost instance);
    partial void UpdatetblAtlanticCanvasBussCost(tblAtlanticCanvasBussCost instance);
    partial void DeletetblAtlanticCanvasBussCost(tblAtlanticCanvasBussCost instance);
    partial void InserttblAtlanticCanvasLength(tblAtlanticCanvasLength instance);
    partial void UpdatetblAtlanticCanvasLength(tblAtlanticCanvasLength instance);
    partial void DeletetblAtlanticCanvasLength(tblAtlanticCanvasLength instance);
    partial void InserttblAtlanticCanvasVolume(tblAtlanticCanvasVolume instance);
    partial void UpdatetblAtlanticCanvasVolume(tblAtlanticCanvasVolume instance);
    partial void DeletetblAtlanticCanvasVolume(tblAtlanticCanvasVolume instance);
    partial void InserttblBussinessCost(tblBussinessCost instance);
    partial void UpdatetblBussinessCost(tblBussinessCost instance);
    partial void DeletetblBussinessCost(tblBussinessCost instance);
    partial void InserttblFrameType(tblFrameType instance);
    partial void UpdatetblFrameType(tblFrameType instance);
    partial void DeletetblFrameType(tblFrameType instance);
    partial void InserttblLengthCost(tblLengthCost instance);
    partial void UpdatetblLengthCost(tblLengthCost instance);
    partial void DeletetblLengthCost(tblLengthCost instance);
    partial void InserttblMaterial(tblMaterial instance);
    partial void UpdatetblMaterial(tblMaterial instance);
    partial void DeletetblMaterial(tblMaterial instance);
    partial void InserttblMaterialType(tblMaterialType instance);
    partial void UpdatetblMaterialType(tblMaterialType instance);
    partial void DeletetblMaterialType(tblMaterialType instance);
    #endregion
		
		public LinqtoNewAgeDataContext() : 
				base(global::Engines.Properties.Settings.Default.dbNewAgeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqtoNewAgeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqtoNewAgeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqtoNewAgeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqtoNewAgeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblAreaCost> tblAreaCosts
		{
			get
			{
				return this.GetTable<tblAreaCost>();
			}
		}
		
		public System.Data.Linq.Table<tblVolumeCost> tblVolumeCosts
		{
			get
			{
				return this.GetTable<tblVolumeCost>();
			}
		}
		
		public System.Data.Linq.Table<tblAtlanticCanvasArea> tblAtlanticCanvasAreas
		{
			get
			{
				return this.GetTable<tblAtlanticCanvasArea>();
			}
		}
		
		public System.Data.Linq.Table<tblAtlanticCanvasBussCost> tblAtlanticCanvasBussCosts
		{
			get
			{
				return this.GetTable<tblAtlanticCanvasBussCost>();
			}
		}
		
		public System.Data.Linq.Table<tblAtlanticCanvasLength> tblAtlanticCanvasLengths
		{
			get
			{
				return this.GetTable<tblAtlanticCanvasLength>();
			}
		}
		
		public System.Data.Linq.Table<tblAtlanticCanvasVolume> tblAtlanticCanvasVolumes
		{
			get
			{
				return this.GetTable<tblAtlanticCanvasVolume>();
			}
		}
		
		public System.Data.Linq.Table<tblBussinessCost> tblBussinessCosts
		{
			get
			{
				return this.GetTable<tblBussinessCost>();
			}
		}
		
		public System.Data.Linq.Table<tblFrameType> tblFrameTypes
		{
			get
			{
				return this.GetTable<tblFrameType>();
			}
		}
		
		public System.Data.Linq.Table<tblLengthCost> tblLengthCosts
		{
			get
			{
				return this.GetTable<tblLengthCost>();
			}
		}
		
		public System.Data.Linq.Table<tblMaterial> tblMaterials
		{
			get
			{
				return this.GetTable<tblMaterial>();
			}
		}
		
		public System.Data.Linq.Table<tblMaterialType> tblMaterialTypes
		{
			get
			{
				return this.GetTable<tblMaterialType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAreaCost")]
	public partial class tblAreaCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AreatCostID;
		
		private int _TypeID;
		
		private string _MaterialID;
		
		private System.Nullable<decimal> _TotalLenght;
		
		private System.Nullable<decimal> _TotalWidth;
		
		private System.Nullable<decimal> _TotalCost;
		
		private System.Nullable<decimal> _PricePerMeterSQ;
		
		private System.Nullable<decimal> _TotalArea;
		
		private EntityRef<tblMaterial> _tblMaterial;
		
		private EntityRef<tblMaterialType> _tblMaterialType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAreatCostIDChanging(int value);
    partial void OnAreatCostIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnMaterialIDChanging(string value);
    partial void OnMaterialIDChanged();
    partial void OnTotalLenghtChanging(System.Nullable<decimal> value);
    partial void OnTotalLenghtChanged();
    partial void OnTotalWidthChanging(System.Nullable<decimal> value);
    partial void OnTotalWidthChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    partial void OnPricePerMeterSQChanging(System.Nullable<decimal> value);
    partial void OnPricePerMeterSQChanged();
    partial void OnTotalAreaChanging(System.Nullable<decimal> value);
    partial void OnTotalAreaChanged();
    #endregion
		
		public tblAreaCost()
		{
			this._tblMaterial = default(EntityRef<tblMaterial>);
			this._tblMaterialType = default(EntityRef<tblMaterialType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreatCostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AreatCostID
		{
			get
			{
				return this._AreatCostID;
			}
			set
			{
				if ((this._AreatCostID != value))
				{
					this.OnAreatCostIDChanging(value);
					this.SendPropertyChanging();
					this._AreatCostID = value;
					this.SendPropertyChanged("AreatCostID");
					this.OnAreatCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._tblMaterialType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					if (this._tblMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLenght", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TotalLenght
		{
			get
			{
				return this._TotalLenght;
			}
			set
			{
				if ((this._TotalLenght != value))
				{
					this.OnTotalLenghtChanging(value);
					this.SendPropertyChanging();
					this._TotalLenght = value;
					this.SendPropertyChanged("TotalLenght");
					this.OnTotalLenghtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWidth", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TotalWidth
		{
			get
			{
				return this._TotalWidth;
			}
			set
			{
				if ((this._TotalWidth != value))
				{
					this.OnTotalWidthChanging(value);
					this.SendPropertyChanging();
					this._TotalWidth = value;
					this.SendPropertyChanged("TotalWidth");
					this.OnTotalWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Money")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerMeterSQ", DbType="Money")]
		public System.Nullable<decimal> PricePerMeterSQ
		{
			get
			{
				return this._PricePerMeterSQ;
			}
			set
			{
				if ((this._PricePerMeterSQ != value))
				{
					this.OnPricePerMeterSQChanging(value);
					this.SendPropertyChanging();
					this._PricePerMeterSQ = value;
					this.SendPropertyChanged("PricePerMeterSQ");
					this.OnPricePerMeterSQChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalArea", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TotalArea
		{
			get
			{
				return this._TotalArea;
			}
			set
			{
				if ((this._TotalArea != value))
				{
					this.OnTotalAreaChanging(value);
					this.SendPropertyChanging();
					this._TotalArea = value;
					this.SendPropertyChanged("TotalArea");
					this.OnTotalAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAreaCost", Storage="_tblMaterial", ThisKey="MaterialID", OtherKey="MaterialID", IsForeignKey=true)]
		public tblMaterial tblMaterial
		{
			get
			{
				return this._tblMaterial.Entity;
			}
			set
			{
				tblMaterial previousValue = this._tblMaterial.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterial.Entity = null;
						previousValue.tblAreaCosts.Remove(this);
					}
					this._tblMaterial.Entity = value;
					if ((value != null))
					{
						value.tblAreaCosts.Add(this);
						this._MaterialID = value.MaterialID;
					}
					else
					{
						this._MaterialID = default(string);
					}
					this.SendPropertyChanged("tblMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblAreaCost", Storage="_tblMaterialType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public tblMaterialType tblMaterialType
		{
			get
			{
				return this._tblMaterialType.Entity;
			}
			set
			{
				tblMaterialType previousValue = this._tblMaterialType.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterialType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterialType.Entity = null;
						previousValue.tblAreaCosts.Remove(this);
					}
					this._tblMaterialType.Entity = value;
					if ((value != null))
					{
						value.tblAreaCosts.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("tblMaterialType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblVolumeCost")]
	public partial class tblVolumeCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VolumeCostID;
		
		private int _TypeID;
		
		private string _MaterialID;
		
		private System.Nullable<decimal> _TotalVolume;
		
		private System.Nullable<decimal> _PricePerLiter;
		
		private System.Nullable<decimal> _TotalCost;
		
		private EntityRef<tblMaterial> _tblMaterial;
		
		private EntityRef<tblMaterialType> _tblMaterialType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVolumeCostIDChanging(int value);
    partial void OnVolumeCostIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnMaterialIDChanging(string value);
    partial void OnMaterialIDChanged();
    partial void OnTotalVolumeChanging(System.Nullable<decimal> value);
    partial void OnTotalVolumeChanged();
    partial void OnPricePerLiterChanging(System.Nullable<decimal> value);
    partial void OnPricePerLiterChanged();
    partial void OnTotalCostChanging(System.Nullable<decimal> value);
    partial void OnTotalCostChanged();
    #endregion
		
		public tblVolumeCost()
		{
			this._tblMaterial = default(EntityRef<tblMaterial>);
			this._tblMaterialType = default(EntityRef<tblMaterialType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VolumeCostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VolumeCostID
		{
			get
			{
				return this._VolumeCostID;
			}
			set
			{
				if ((this._VolumeCostID != value))
				{
					this.OnVolumeCostIDChanging(value);
					this.SendPropertyChanging();
					this._VolumeCostID = value;
					this.SendPropertyChanged("VolumeCostID");
					this.OnVolumeCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._tblMaterialType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					if (this._tblMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVolume", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TotalVolume
		{
			get
			{
				return this._TotalVolume;
			}
			set
			{
				if ((this._TotalVolume != value))
				{
					this.OnTotalVolumeChanging(value);
					this.SendPropertyChanging();
					this._TotalVolume = value;
					this.SendPropertyChanged("TotalVolume");
					this.OnTotalVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerLiter", DbType="Money")]
		public System.Nullable<decimal> PricePerLiter
		{
			get
			{
				return this._PricePerLiter;
			}
			set
			{
				if ((this._PricePerLiter != value))
				{
					this.OnPricePerLiterChanging(value);
					this.SendPropertyChanging();
					this._PricePerLiter = value;
					this.SendPropertyChanged("PricePerLiter");
					this.OnPricePerLiterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCost", DbType="Money")]
		public System.Nullable<decimal> TotalCost
		{
			get
			{
				return this._TotalCost;
			}
			set
			{
				if ((this._TotalCost != value))
				{
					this.OnTotalCostChanging(value);
					this.SendPropertyChanging();
					this._TotalCost = value;
					this.SendPropertyChanged("TotalCost");
					this.OnTotalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblVolumeCost", Storage="_tblMaterial", ThisKey="MaterialID", OtherKey="MaterialID", IsForeignKey=true)]
		public tblMaterial tblMaterial
		{
			get
			{
				return this._tblMaterial.Entity;
			}
			set
			{
				tblMaterial previousValue = this._tblMaterial.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterial.Entity = null;
						previousValue.tblVolumeCosts.Remove(this);
					}
					this._tblMaterial.Entity = value;
					if ((value != null))
					{
						value.tblVolumeCosts.Add(this);
						this._MaterialID = value.MaterialID;
					}
					else
					{
						this._MaterialID = default(string);
					}
					this.SendPropertyChanged("tblMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblVolumeCost", Storage="_tblMaterialType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public tblMaterialType tblMaterialType
		{
			get
			{
				return this._tblMaterialType.Entity;
			}
			set
			{
				tblMaterialType previousValue = this._tblMaterialType.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterialType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterialType.Entity = null;
						previousValue.tblVolumeCosts.Remove(this);
					}
					this._tblMaterialType.Entity = value;
					if ((value != null))
					{
						value.tblVolumeCosts.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("tblMaterialType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAtlanticCanvasArea")]
	public partial class tblAtlanticCanvasArea : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AtlanticCanvasAreaID;
		
		private string _MaterialID;
		
		private System.Nullable<decimal> _PricePerSqrMeter;
		
		private System.Nullable<decimal> _AreaLength;
		
		private System.Nullable<decimal> _AreaWidth;
		
		private System.Nullable<decimal> _TotalUsedAreaCost;
		
		private EntityRef<tblMaterial> _tblMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAtlanticCanvasAreaIDChanging(int value);
    partial void OnAtlanticCanvasAreaIDChanged();
    partial void OnMaterialIDChanging(string value);
    partial void OnMaterialIDChanged();
    partial void OnPricePerSqrMeterChanging(System.Nullable<decimal> value);
    partial void OnPricePerSqrMeterChanged();
    partial void OnAreaLengthChanging(System.Nullable<decimal> value);
    partial void OnAreaLengthChanged();
    partial void OnAreaWidthChanging(System.Nullable<decimal> value);
    partial void OnAreaWidthChanged();
    partial void OnTotalUsedAreaCostChanging(System.Nullable<decimal> value);
    partial void OnTotalUsedAreaCostChanged();
    #endregion
		
		public tblAtlanticCanvasArea()
		{
			this._tblMaterial = default(EntityRef<tblMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtlanticCanvasAreaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AtlanticCanvasAreaID
		{
			get
			{
				return this._AtlanticCanvasAreaID;
			}
			set
			{
				if ((this._AtlanticCanvasAreaID != value))
				{
					this.OnAtlanticCanvasAreaIDChanging(value);
					this.SendPropertyChanging();
					this._AtlanticCanvasAreaID = value;
					this.SendPropertyChanged("AtlanticCanvasAreaID");
					this.OnAtlanticCanvasAreaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					if (this._tblMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerSqrMeter", DbType="Money")]
		public System.Nullable<decimal> PricePerSqrMeter
		{
			get
			{
				return this._PricePerSqrMeter;
			}
			set
			{
				if ((this._PricePerSqrMeter != value))
				{
					this.OnPricePerSqrMeterChanging(value);
					this.SendPropertyChanging();
					this._PricePerSqrMeter = value;
					this.SendPropertyChanged("PricePerSqrMeter");
					this.OnPricePerSqrMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaLength", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> AreaLength
		{
			get
			{
				return this._AreaLength;
			}
			set
			{
				if ((this._AreaLength != value))
				{
					this.OnAreaLengthChanging(value);
					this.SendPropertyChanging();
					this._AreaLength = value;
					this.SendPropertyChanged("AreaLength");
					this.OnAreaLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AreaWidth", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> AreaWidth
		{
			get
			{
				return this._AreaWidth;
			}
			set
			{
				if ((this._AreaWidth != value))
				{
					this.OnAreaWidthChanging(value);
					this.SendPropertyChanging();
					this._AreaWidth = value;
					this.SendPropertyChanged("AreaWidth");
					this.OnAreaWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUsedAreaCost", DbType="Money")]
		public System.Nullable<decimal> TotalUsedAreaCost
		{
			get
			{
				return this._TotalUsedAreaCost;
			}
			set
			{
				if ((this._TotalUsedAreaCost != value))
				{
					this.OnTotalUsedAreaCostChanging(value);
					this.SendPropertyChanging();
					this._TotalUsedAreaCost = value;
					this.SendPropertyChanged("TotalUsedAreaCost");
					this.OnTotalUsedAreaCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAtlanticCanvasArea", Storage="_tblMaterial", ThisKey="MaterialID", OtherKey="MaterialID", IsForeignKey=true)]
		public tblMaterial tblMaterial
		{
			get
			{
				return this._tblMaterial.Entity;
			}
			set
			{
				tblMaterial previousValue = this._tblMaterial.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterial.Entity = null;
						previousValue.tblAtlanticCanvasAreas.Remove(this);
					}
					this._tblMaterial.Entity = value;
					if ((value != null))
					{
						value.tblAtlanticCanvasAreas.Add(this);
						this._MaterialID = value.MaterialID;
					}
					else
					{
						this._MaterialID = default(string);
					}
					this.SendPropertyChanged("tblMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAtlanticCanvasBussCost")]
	public partial class tblAtlanticCanvasBussCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AtlanticCanvasBussCostID;
		
		private string _MaterialID;
		
		private System.Nullable<decimal> _RatePerHour;
		
		private System.Nullable<decimal> _HoursWorked;
		
		private System.Nullable<decimal> _TotalBussinessCost;
		
		private EntityRef<tblMaterial> _tblMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAtlanticCanvasBussCostIDChanging(int value);
    partial void OnAtlanticCanvasBussCostIDChanged();
    partial void OnMaterialIDChanging(string value);
    partial void OnMaterialIDChanged();
    partial void OnRatePerHourChanging(System.Nullable<decimal> value);
    partial void OnRatePerHourChanged();
    partial void OnHoursWorkedChanging(System.Nullable<decimal> value);
    partial void OnHoursWorkedChanged();
    partial void OnTotalBussinessCostChanging(System.Nullable<decimal> value);
    partial void OnTotalBussinessCostChanged();
    #endregion
		
		public tblAtlanticCanvasBussCost()
		{
			this._tblMaterial = default(EntityRef<tblMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtlanticCanvasBussCostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AtlanticCanvasBussCostID
		{
			get
			{
				return this._AtlanticCanvasBussCostID;
			}
			set
			{
				if ((this._AtlanticCanvasBussCostID != value))
				{
					this.OnAtlanticCanvasBussCostIDChanging(value);
					this.SendPropertyChanging();
					this._AtlanticCanvasBussCostID = value;
					this.SendPropertyChanged("AtlanticCanvasBussCostID");
					this.OnAtlanticCanvasBussCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					if (this._tblMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerHour", DbType="Money")]
		public System.Nullable<decimal> RatePerHour
		{
			get
			{
				return this._RatePerHour;
			}
			set
			{
				if ((this._RatePerHour != value))
				{
					this.OnRatePerHourChanging(value);
					this.SendPropertyChanging();
					this._RatePerHour = value;
					this.SendPropertyChanged("RatePerHour");
					this.OnRatePerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoursWorked", DbType="Decimal(2,2)")]
		public System.Nullable<decimal> HoursWorked
		{
			get
			{
				return this._HoursWorked;
			}
			set
			{
				if ((this._HoursWorked != value))
				{
					this.OnHoursWorkedChanging(value);
					this.SendPropertyChanging();
					this._HoursWorked = value;
					this.SendPropertyChanged("HoursWorked");
					this.OnHoursWorkedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalBussinessCost", DbType="Money")]
		public System.Nullable<decimal> TotalBussinessCost
		{
			get
			{
				return this._TotalBussinessCost;
			}
			set
			{
				if ((this._TotalBussinessCost != value))
				{
					this.OnTotalBussinessCostChanging(value);
					this.SendPropertyChanging();
					this._TotalBussinessCost = value;
					this.SendPropertyChanged("TotalBussinessCost");
					this.OnTotalBussinessCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAtlanticCanvasBussCost", Storage="_tblMaterial", ThisKey="MaterialID", OtherKey="MaterialID", IsForeignKey=true)]
		public tblMaterial tblMaterial
		{
			get
			{
				return this._tblMaterial.Entity;
			}
			set
			{
				tblMaterial previousValue = this._tblMaterial.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterial.Entity = null;
						previousValue.tblAtlanticCanvasBussCosts.Remove(this);
					}
					this._tblMaterial.Entity = value;
					if ((value != null))
					{
						value.tblAtlanticCanvasBussCosts.Add(this);
						this._MaterialID = value.MaterialID;
					}
					else
					{
						this._MaterialID = default(string);
					}
					this.SendPropertyChanged("tblMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAtlanticCanvasLength")]
	public partial class tblAtlanticCanvasLength : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AtlanticCanvasLenID;
		
		private string _MaterialID;
		
		private int _FrameID;
		
		private System.Nullable<decimal> _FrameLenght;
		
		private System.Nullable<decimal> _FrameWidth;
		
		private System.Nullable<decimal> _NoOfFrames;
		
		private System.Nullable<decimal> _TotalUsedFrameCost;
		
		private System.Nullable<decimal> _FrameArea;
		
		private System.Nullable<decimal> _CanvasOverlap;
		
		private System.Nullable<decimal> _TotalCanvasArea;
		
		private System.Nullable<decimal> _TotalFrameLength;
		
		private EntityRef<tblFrameType> _tblFrameType;
		
		private EntityRef<tblMaterial> _tblMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAtlanticCanvasLenIDChanging(int value);
    partial void OnAtlanticCanvasLenIDChanged();
    partial void OnMaterialIDChanging(string value);
    partial void OnMaterialIDChanged();
    partial void OnFrameIDChanging(int value);
    partial void OnFrameIDChanged();
    partial void OnFrameLenghtChanging(System.Nullable<decimal> value);
    partial void OnFrameLenghtChanged();
    partial void OnFrameWidthChanging(System.Nullable<decimal> value);
    partial void OnFrameWidthChanged();
    partial void OnNoOfFramesChanging(System.Nullable<decimal> value);
    partial void OnNoOfFramesChanged();
    partial void OnTotalUsedFrameCostChanging(System.Nullable<decimal> value);
    partial void OnTotalUsedFrameCostChanged();
    partial void OnFrameAreaChanging(System.Nullable<decimal> value);
    partial void OnFrameAreaChanged();
    partial void OnCanvasOverlapChanging(System.Nullable<decimal> value);
    partial void OnCanvasOverlapChanged();
    partial void OnTotalCanvasAreaChanging(System.Nullable<decimal> value);
    partial void OnTotalCanvasAreaChanged();
    partial void OnTotalFrameLengthChanging(System.Nullable<decimal> value);
    partial void OnTotalFrameLengthChanged();
    #endregion
		
		public tblAtlanticCanvasLength()
		{
			this._tblFrameType = default(EntityRef<tblFrameType>);
			this._tblMaterial = default(EntityRef<tblMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtlanticCanvasLenID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AtlanticCanvasLenID
		{
			get
			{
				return this._AtlanticCanvasLenID;
			}
			set
			{
				if ((this._AtlanticCanvasLenID != value))
				{
					this.OnAtlanticCanvasLenIDChanging(value);
					this.SendPropertyChanging();
					this._AtlanticCanvasLenID = value;
					this.SendPropertyChanged("AtlanticCanvasLenID");
					this.OnAtlanticCanvasLenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					if (this._tblMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrameID", DbType="Int NOT NULL")]
		public int FrameID
		{
			get
			{
				return this._FrameID;
			}
			set
			{
				if ((this._FrameID != value))
				{
					if (this._tblFrameType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFrameIDChanging(value);
					this.SendPropertyChanging();
					this._FrameID = value;
					this.SendPropertyChanged("FrameID");
					this.OnFrameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrameLenght", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> FrameLenght
		{
			get
			{
				return this._FrameLenght;
			}
			set
			{
				if ((this._FrameLenght != value))
				{
					this.OnFrameLenghtChanging(value);
					this.SendPropertyChanging();
					this._FrameLenght = value;
					this.SendPropertyChanged("FrameLenght");
					this.OnFrameLenghtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrameWidth", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> FrameWidth
		{
			get
			{
				return this._FrameWidth;
			}
			set
			{
				if ((this._FrameWidth != value))
				{
					this.OnFrameWidthChanging(value);
					this.SendPropertyChanging();
					this._FrameWidth = value;
					this.SendPropertyChanged("FrameWidth");
					this.OnFrameWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoOfFrames", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> NoOfFrames
		{
			get
			{
				return this._NoOfFrames;
			}
			set
			{
				if ((this._NoOfFrames != value))
				{
					this.OnNoOfFramesChanging(value);
					this.SendPropertyChanging();
					this._NoOfFrames = value;
					this.SendPropertyChanged("NoOfFrames");
					this.OnNoOfFramesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUsedFrameCost", DbType="Money")]
		public System.Nullable<decimal> TotalUsedFrameCost
		{
			get
			{
				return this._TotalUsedFrameCost;
			}
			set
			{
				if ((this._TotalUsedFrameCost != value))
				{
					this.OnTotalUsedFrameCostChanging(value);
					this.SendPropertyChanging();
					this._TotalUsedFrameCost = value;
					this.SendPropertyChanged("TotalUsedFrameCost");
					this.OnTotalUsedFrameCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrameArea", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> FrameArea
		{
			get
			{
				return this._FrameArea;
			}
			set
			{
				if ((this._FrameArea != value))
				{
					this.OnFrameAreaChanging(value);
					this.SendPropertyChanging();
					this._FrameArea = value;
					this.SendPropertyChanged("FrameArea");
					this.OnFrameAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanvasOverlap", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> CanvasOverlap
		{
			get
			{
				return this._CanvasOverlap;
			}
			set
			{
				if ((this._CanvasOverlap != value))
				{
					this.OnCanvasOverlapChanging(value);
					this.SendPropertyChanging();
					this._CanvasOverlap = value;
					this.SendPropertyChanged("CanvasOverlap");
					this.OnCanvasOverlapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCanvasArea", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> TotalCanvasArea
		{
			get
			{
				return this._TotalCanvasArea;
			}
			set
			{
				if ((this._TotalCanvasArea != value))
				{
					this.OnTotalCanvasAreaChanging(value);
					this.SendPropertyChanging();
					this._TotalCanvasArea = value;
					this.SendPropertyChanged("TotalCanvasArea");
					this.OnTotalCanvasAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalFrameLength", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> TotalFrameLength
		{
			get
			{
				return this._TotalFrameLength;
			}
			set
			{
				if ((this._TotalFrameLength != value))
				{
					this.OnTotalFrameLengthChanging(value);
					this.SendPropertyChanging();
					this._TotalFrameLength = value;
					this.SendPropertyChanged("TotalFrameLength");
					this.OnTotalFrameLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblFrameType_tblAtlanticCanvasLength", Storage="_tblFrameType", ThisKey="FrameID", OtherKey="FrameID", IsForeignKey=true)]
		public tblFrameType tblFrameType
		{
			get
			{
				return this._tblFrameType.Entity;
			}
			set
			{
				tblFrameType previousValue = this._tblFrameType.Entity;
				if (((previousValue != value) 
							|| (this._tblFrameType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblFrameType.Entity = null;
						previousValue.tblAtlanticCanvasLengths.Remove(this);
					}
					this._tblFrameType.Entity = value;
					if ((value != null))
					{
						value.tblAtlanticCanvasLengths.Add(this);
						this._FrameID = value.FrameID;
					}
					else
					{
						this._FrameID = default(int);
					}
					this.SendPropertyChanged("tblFrameType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAtlanticCanvasLength", Storage="_tblMaterial", ThisKey="MaterialID", OtherKey="MaterialID", IsForeignKey=true)]
		public tblMaterial tblMaterial
		{
			get
			{
				return this._tblMaterial.Entity;
			}
			set
			{
				tblMaterial previousValue = this._tblMaterial.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterial.Entity = null;
						previousValue.tblAtlanticCanvasLengths.Remove(this);
					}
					this._tblMaterial.Entity = value;
					if ((value != null))
					{
						value.tblAtlanticCanvasLengths.Add(this);
						this._MaterialID = value.MaterialID;
					}
					else
					{
						this._MaterialID = default(string);
					}
					this.SendPropertyChanged("tblMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAtlanticCanvasVolume")]
	public partial class tblAtlanticCanvasVolume : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AtlanticCanvasVolumeID;
		
		private string _MaterialID;
		
		private System.Nullable<decimal> _PricePerLiter;
		
		private System.Nullable<decimal> _LitresUsed;
		
		private System.Nullable<decimal> _TotalUsedVolumeCost;
		
		private EntityRef<tblMaterial> _tblMaterial;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAtlanticCanvasVolumeIDChanging(int value);
    partial void OnAtlanticCanvasVolumeIDChanged();
    partial void OnMaterialIDChanging(string value);
    partial void OnMaterialIDChanged();
    partial void OnPricePerLiterChanging(System.Nullable<decimal> value);
    partial void OnPricePerLiterChanged();
    partial void OnLitresUsedChanging(System.Nullable<decimal> value);
    partial void OnLitresUsedChanged();
    partial void OnTotalUsedVolumeCostChanging(System.Nullable<decimal> value);
    partial void OnTotalUsedVolumeCostChanged();
    #endregion
		
		public tblAtlanticCanvasVolume()
		{
			this._tblMaterial = default(EntityRef<tblMaterial>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AtlanticCanvasVolumeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AtlanticCanvasVolumeID
		{
			get
			{
				return this._AtlanticCanvasVolumeID;
			}
			set
			{
				if ((this._AtlanticCanvasVolumeID != value))
				{
					this.OnAtlanticCanvasVolumeIDChanging(value);
					this.SendPropertyChanging();
					this._AtlanticCanvasVolumeID = value;
					this.SendPropertyChanged("AtlanticCanvasVolumeID");
					this.OnAtlanticCanvasVolumeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					if (this._tblMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerLiter", DbType="Money")]
		public System.Nullable<decimal> PricePerLiter
		{
			get
			{
				return this._PricePerLiter;
			}
			set
			{
				if ((this._PricePerLiter != value))
				{
					this.OnPricePerLiterChanging(value);
					this.SendPropertyChanging();
					this._PricePerLiter = value;
					this.SendPropertyChanged("PricePerLiter");
					this.OnPricePerLiterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LitresUsed", DbType="Decimal(9,3)")]
		public System.Nullable<decimal> LitresUsed
		{
			get
			{
				return this._LitresUsed;
			}
			set
			{
				if ((this._LitresUsed != value))
				{
					this.OnLitresUsedChanging(value);
					this.SendPropertyChanging();
					this._LitresUsed = value;
					this.SendPropertyChanged("LitresUsed");
					this.OnLitresUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalUsedVolumeCost", DbType="Money")]
		public System.Nullable<decimal> TotalUsedVolumeCost
		{
			get
			{
				return this._TotalUsedVolumeCost;
			}
			set
			{
				if ((this._TotalUsedVolumeCost != value))
				{
					this.OnTotalUsedVolumeCostChanging(value);
					this.SendPropertyChanging();
					this._TotalUsedVolumeCost = value;
					this.SendPropertyChanged("TotalUsedVolumeCost");
					this.OnTotalUsedVolumeCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAtlanticCanvasVolume", Storage="_tblMaterial", ThisKey="MaterialID", OtherKey="MaterialID", IsForeignKey=true)]
		public tblMaterial tblMaterial
		{
			get
			{
				return this._tblMaterial.Entity;
			}
			set
			{
				tblMaterial previousValue = this._tblMaterial.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterial.Entity = null;
						previousValue.tblAtlanticCanvasVolumes.Remove(this);
					}
					this._tblMaterial.Entity = value;
					if ((value != null))
					{
						value.tblAtlanticCanvasVolumes.Add(this);
						this._MaterialID = value.MaterialID;
					}
					else
					{
						this._MaterialID = default(string);
					}
					this.SendPropertyChanged("tblMaterial");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBussinessCost")]
	public partial class tblBussinessCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BussinessCostID;
		
		private int _TypeID;
		
		private string _MaterialID;
		
		private string _CostName;
		
		private System.Nullable<decimal> _RatePerHour;
		
		private EntityRef<tblMaterial> _tblMaterial;
		
		private EntityRef<tblMaterialType> _tblMaterialType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBussinessCostIDChanging(int value);
    partial void OnBussinessCostIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnMaterialIDChanging(string value);
    partial void OnMaterialIDChanged();
    partial void OnCostNameChanging(string value);
    partial void OnCostNameChanged();
    partial void OnRatePerHourChanging(System.Nullable<decimal> value);
    partial void OnRatePerHourChanged();
    #endregion
		
		public tblBussinessCost()
		{
			this._tblMaterial = default(EntityRef<tblMaterial>);
			this._tblMaterialType = default(EntityRef<tblMaterialType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BussinessCostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BussinessCostID
		{
			get
			{
				return this._BussinessCostID;
			}
			set
			{
				if ((this._BussinessCostID != value))
				{
					this.OnBussinessCostIDChanging(value);
					this.SendPropertyChanging();
					this._BussinessCostID = value;
					this.SendPropertyChanged("BussinessCostID");
					this.OnBussinessCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._tblMaterialType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					if (this._tblMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostName", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string CostName
		{
			get
			{
				return this._CostName;
			}
			set
			{
				if ((this._CostName != value))
				{
					this.OnCostNameChanging(value);
					this.SendPropertyChanging();
					this._CostName = value;
					this.SendPropertyChanged("CostName");
					this.OnCostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RatePerHour", DbType="Money")]
		public System.Nullable<decimal> RatePerHour
		{
			get
			{
				return this._RatePerHour;
			}
			set
			{
				if ((this._RatePerHour != value))
				{
					this.OnRatePerHourChanging(value);
					this.SendPropertyChanging();
					this._RatePerHour = value;
					this.SendPropertyChanged("RatePerHour");
					this.OnRatePerHourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblBussinessCost", Storage="_tblMaterial", ThisKey="MaterialID", OtherKey="MaterialID", IsForeignKey=true)]
		public tblMaterial tblMaterial
		{
			get
			{
				return this._tblMaterial.Entity;
			}
			set
			{
				tblMaterial previousValue = this._tblMaterial.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterial.Entity = null;
						previousValue.tblBussinessCosts.Remove(this);
					}
					this._tblMaterial.Entity = value;
					if ((value != null))
					{
						value.tblBussinessCosts.Add(this);
						this._MaterialID = value.MaterialID;
					}
					else
					{
						this._MaterialID = default(string);
					}
					this.SendPropertyChanged("tblMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblBussinessCost", Storage="_tblMaterialType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public tblMaterialType tblMaterialType
		{
			get
			{
				return this._tblMaterialType.Entity;
			}
			set
			{
				tblMaterialType previousValue = this._tblMaterialType.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterialType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterialType.Entity = null;
						previousValue.tblBussinessCosts.Remove(this);
					}
					this._tblMaterialType.Entity = value;
					if ((value != null))
					{
						value.tblBussinessCosts.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("tblMaterialType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblFrameType")]
	public partial class tblFrameType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FrameID;
		
		private string _Frame_Name;
		
		private EntitySet<tblAtlanticCanvasLength> _tblAtlanticCanvasLengths;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFrameIDChanging(int value);
    partial void OnFrameIDChanged();
    partial void OnFrame_NameChanging(string value);
    partial void OnFrame_NameChanged();
    #endregion
		
		public tblFrameType()
		{
			this._tblAtlanticCanvasLengths = new EntitySet<tblAtlanticCanvasLength>(new Action<tblAtlanticCanvasLength>(this.attach_tblAtlanticCanvasLengths), new Action<tblAtlanticCanvasLength>(this.detach_tblAtlanticCanvasLengths));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FrameID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FrameID
		{
			get
			{
				return this._FrameID;
			}
			set
			{
				if ((this._FrameID != value))
				{
					this.OnFrameIDChanging(value);
					this.SendPropertyChanging();
					this._FrameID = value;
					this.SendPropertyChanged("FrameID");
					this.OnFrameIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Frame Name]", Storage="_Frame_Name", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Frame_Name
		{
			get
			{
				return this._Frame_Name;
			}
			set
			{
				if ((this._Frame_Name != value))
				{
					this.OnFrame_NameChanging(value);
					this.SendPropertyChanging();
					this._Frame_Name = value;
					this.SendPropertyChanged("Frame_Name");
					this.OnFrame_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblFrameType_tblAtlanticCanvasLength", Storage="_tblAtlanticCanvasLengths", ThisKey="FrameID", OtherKey="FrameID")]
		public EntitySet<tblAtlanticCanvasLength> tblAtlanticCanvasLengths
		{
			get
			{
				return this._tblAtlanticCanvasLengths;
			}
			set
			{
				this._tblAtlanticCanvasLengths.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAtlanticCanvasLengths(tblAtlanticCanvasLength entity)
		{
			this.SendPropertyChanging();
			entity.tblFrameType = this;
		}
		
		private void detach_tblAtlanticCanvasLengths(tblAtlanticCanvasLength entity)
		{
			this.SendPropertyChanging();
			entity.tblFrameType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLengthCost")]
	public partial class tblLengthCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LenghtCostID;
		
		private int _TypeID;
		
		private string _MaterialID;
		
		private System.Nullable<decimal> _NoPieces;
		
		private System.Nullable<decimal> _LengthPerPiece;
		
		private System.Nullable<decimal> _TotalLength;
		
		private System.Nullable<decimal> _TotalCostPieces;
		
		private System.Nullable<decimal> _PricePerMeter;
		
		private EntityRef<tblMaterial> _tblMaterial;
		
		private EntityRef<tblMaterialType> _tblMaterialType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLenghtCostIDChanging(int value);
    partial void OnLenghtCostIDChanged();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnMaterialIDChanging(string value);
    partial void OnMaterialIDChanged();
    partial void OnNoPiecesChanging(System.Nullable<decimal> value);
    partial void OnNoPiecesChanged();
    partial void OnLengthPerPieceChanging(System.Nullable<decimal> value);
    partial void OnLengthPerPieceChanged();
    partial void OnTotalLengthChanging(System.Nullable<decimal> value);
    partial void OnTotalLengthChanged();
    partial void OnTotalCostPiecesChanging(System.Nullable<decimal> value);
    partial void OnTotalCostPiecesChanged();
    partial void OnPricePerMeterChanging(System.Nullable<decimal> value);
    partial void OnPricePerMeterChanged();
    #endregion
		
		public tblLengthCost()
		{
			this._tblMaterial = default(EntityRef<tblMaterial>);
			this._tblMaterialType = default(EntityRef<tblMaterialType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LenghtCostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LenghtCostID
		{
			get
			{
				return this._LenghtCostID;
			}
			set
			{
				if ((this._LenghtCostID != value))
				{
					this.OnLenghtCostIDChanging(value);
					this.SendPropertyChanging();
					this._LenghtCostID = value;
					this.SendPropertyChanged("LenghtCostID");
					this.OnLenghtCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._tblMaterialType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="NVarChar(9) NOT NULL", CanBeNull=false)]
		public string MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					if (this._tblMaterial.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoPieces", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> NoPieces
		{
			get
			{
				return this._NoPieces;
			}
			set
			{
				if ((this._NoPieces != value))
				{
					this.OnNoPiecesChanging(value);
					this.SendPropertyChanging();
					this._NoPieces = value;
					this.SendPropertyChanged("NoPieces");
					this.OnNoPiecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthPerPiece", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> LengthPerPiece
		{
			get
			{
				return this._LengthPerPiece;
			}
			set
			{
				if ((this._LengthPerPiece != value))
				{
					this.OnLengthPerPieceChanging(value);
					this.SendPropertyChanging();
					this._LengthPerPiece = value;
					this.SendPropertyChanged("LengthPerPiece");
					this.OnLengthPerPieceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLength", DbType="Decimal(9,2)")]
		public System.Nullable<decimal> TotalLength
		{
			get
			{
				return this._TotalLength;
			}
			set
			{
				if ((this._TotalLength != value))
				{
					this.OnTotalLengthChanging(value);
					this.SendPropertyChanging();
					this._TotalLength = value;
					this.SendPropertyChanged("TotalLength");
					this.OnTotalLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCostPieces", DbType="Money")]
		public System.Nullable<decimal> TotalCostPieces
		{
			get
			{
				return this._TotalCostPieces;
			}
			set
			{
				if ((this._TotalCostPieces != value))
				{
					this.OnTotalCostPiecesChanging(value);
					this.SendPropertyChanging();
					this._TotalCostPieces = value;
					this.SendPropertyChanged("TotalCostPieces");
					this.OnTotalCostPiecesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PricePerMeter", DbType="Money")]
		public System.Nullable<decimal> PricePerMeter
		{
			get
			{
				return this._PricePerMeter;
			}
			set
			{
				if ((this._PricePerMeter != value))
				{
					this.OnPricePerMeterChanging(value);
					this.SendPropertyChanging();
					this._PricePerMeter = value;
					this.SendPropertyChanged("PricePerMeter");
					this.OnPricePerMeterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblLengthCost", Storage="_tblMaterial", ThisKey="MaterialID", OtherKey="MaterialID", IsForeignKey=true)]
		public tblMaterial tblMaterial
		{
			get
			{
				return this._tblMaterial.Entity;
			}
			set
			{
				tblMaterial previousValue = this._tblMaterial.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterial.Entity = null;
						previousValue.tblLengthCosts.Remove(this);
					}
					this._tblMaterial.Entity = value;
					if ((value != null))
					{
						value.tblLengthCosts.Add(this);
						this._MaterialID = value.MaterialID;
					}
					else
					{
						this._MaterialID = default(string);
					}
					this.SendPropertyChanged("tblMaterial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblLengthCost", Storage="_tblMaterialType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public tblMaterialType tblMaterialType
		{
			get
			{
				return this._tblMaterialType.Entity;
			}
			set
			{
				tblMaterialType previousValue = this._tblMaterialType.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterialType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterialType.Entity = null;
						previousValue.tblLengthCosts.Remove(this);
					}
					this._tblMaterialType.Entity = value;
					if ((value != null))
					{
						value.tblLengthCosts.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(int);
					}
					this.SendPropertyChanged("tblMaterialType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMaterial")]
	public partial class tblMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaterialID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _TypeID;
		
		private EntitySet<tblAreaCost> _tblAreaCosts;
		
		private EntitySet<tblVolumeCost> _tblVolumeCosts;
		
		private EntitySet<tblAtlanticCanvasArea> _tblAtlanticCanvasAreas;
		
		private EntitySet<tblAtlanticCanvasBussCost> _tblAtlanticCanvasBussCosts;
		
		private EntitySet<tblAtlanticCanvasLength> _tblAtlanticCanvasLengths;
		
		private EntitySet<tblAtlanticCanvasVolume> _tblAtlanticCanvasVolumes;
		
		private EntitySet<tblBussinessCost> _tblBussinessCosts;
		
		private EntitySet<tblLengthCost> _tblLengthCosts;
		
		private EntityRef<tblMaterialType> _tblMaterialType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaterialIDChanging(string value);
    partial void OnMaterialIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    #endregion
		
		public tblMaterial()
		{
			this._tblAreaCosts = new EntitySet<tblAreaCost>(new Action<tblAreaCost>(this.attach_tblAreaCosts), new Action<tblAreaCost>(this.detach_tblAreaCosts));
			this._tblVolumeCosts = new EntitySet<tblVolumeCost>(new Action<tblVolumeCost>(this.attach_tblVolumeCosts), new Action<tblVolumeCost>(this.detach_tblVolumeCosts));
			this._tblAtlanticCanvasAreas = new EntitySet<tblAtlanticCanvasArea>(new Action<tblAtlanticCanvasArea>(this.attach_tblAtlanticCanvasAreas), new Action<tblAtlanticCanvasArea>(this.detach_tblAtlanticCanvasAreas));
			this._tblAtlanticCanvasBussCosts = new EntitySet<tblAtlanticCanvasBussCost>(new Action<tblAtlanticCanvasBussCost>(this.attach_tblAtlanticCanvasBussCosts), new Action<tblAtlanticCanvasBussCost>(this.detach_tblAtlanticCanvasBussCosts));
			this._tblAtlanticCanvasLengths = new EntitySet<tblAtlanticCanvasLength>(new Action<tblAtlanticCanvasLength>(this.attach_tblAtlanticCanvasLengths), new Action<tblAtlanticCanvasLength>(this.detach_tblAtlanticCanvasLengths));
			this._tblAtlanticCanvasVolumes = new EntitySet<tblAtlanticCanvasVolume>(new Action<tblAtlanticCanvasVolume>(this.attach_tblAtlanticCanvasVolumes), new Action<tblAtlanticCanvasVolume>(this.detach_tblAtlanticCanvasVolumes));
			this._tblBussinessCosts = new EntitySet<tblBussinessCost>(new Action<tblBussinessCost>(this.attach_tblBussinessCosts), new Action<tblBussinessCost>(this.detach_tblBussinessCosts));
			this._tblLengthCosts = new EntitySet<tblLengthCost>(new Action<tblLengthCost>(this.attach_tblLengthCosts), new Action<tblLengthCost>(this.detach_tblLengthCosts));
			this._tblMaterialType = default(EntityRef<tblMaterialType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaterialID", DbType="NVarChar(9) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaterialID
		{
			get
			{
				return this._MaterialID;
			}
			set
			{
				if ((this._MaterialID != value))
				{
					this.OnMaterialIDChanging(value);
					this.SendPropertyChanging();
					this._MaterialID = value;
					this.SendPropertyChanged("MaterialID");
					this.OnMaterialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					if (this._tblMaterialType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAreaCost", Storage="_tblAreaCosts", ThisKey="MaterialID", OtherKey="MaterialID")]
		public EntitySet<tblAreaCost> tblAreaCosts
		{
			get
			{
				return this._tblAreaCosts;
			}
			set
			{
				this._tblAreaCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblVolumeCost", Storage="_tblVolumeCosts", ThisKey="MaterialID", OtherKey="MaterialID")]
		public EntitySet<tblVolumeCost> tblVolumeCosts
		{
			get
			{
				return this._tblVolumeCosts;
			}
			set
			{
				this._tblVolumeCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAtlanticCanvasArea", Storage="_tblAtlanticCanvasAreas", ThisKey="MaterialID", OtherKey="MaterialID")]
		public EntitySet<tblAtlanticCanvasArea> tblAtlanticCanvasAreas
		{
			get
			{
				return this._tblAtlanticCanvasAreas;
			}
			set
			{
				this._tblAtlanticCanvasAreas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAtlanticCanvasBussCost", Storage="_tblAtlanticCanvasBussCosts", ThisKey="MaterialID", OtherKey="MaterialID")]
		public EntitySet<tblAtlanticCanvasBussCost> tblAtlanticCanvasBussCosts
		{
			get
			{
				return this._tblAtlanticCanvasBussCosts;
			}
			set
			{
				this._tblAtlanticCanvasBussCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAtlanticCanvasLength", Storage="_tblAtlanticCanvasLengths", ThisKey="MaterialID", OtherKey="MaterialID")]
		public EntitySet<tblAtlanticCanvasLength> tblAtlanticCanvasLengths
		{
			get
			{
				return this._tblAtlanticCanvasLengths;
			}
			set
			{
				this._tblAtlanticCanvasLengths.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblAtlanticCanvasVolume", Storage="_tblAtlanticCanvasVolumes", ThisKey="MaterialID", OtherKey="MaterialID")]
		public EntitySet<tblAtlanticCanvasVolume> tblAtlanticCanvasVolumes
		{
			get
			{
				return this._tblAtlanticCanvasVolumes;
			}
			set
			{
				this._tblAtlanticCanvasVolumes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblBussinessCost", Storage="_tblBussinessCosts", ThisKey="MaterialID", OtherKey="MaterialID")]
		public EntitySet<tblBussinessCost> tblBussinessCosts
		{
			get
			{
				return this._tblBussinessCosts;
			}
			set
			{
				this._tblBussinessCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterial_tblLengthCost", Storage="_tblLengthCosts", ThisKey="MaterialID", OtherKey="MaterialID")]
		public EntitySet<tblLengthCost> tblLengthCosts
		{
			get
			{
				return this._tblLengthCosts;
			}
			set
			{
				this._tblLengthCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblMaterial", Storage="_tblMaterialType", ThisKey="TypeID", OtherKey="TypeID", IsForeignKey=true)]
		public tblMaterialType tblMaterialType
		{
			get
			{
				return this._tblMaterialType.Entity;
			}
			set
			{
				tblMaterialType previousValue = this._tblMaterialType.Entity;
				if (((previousValue != value) 
							|| (this._tblMaterialType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMaterialType.Entity = null;
						previousValue.tblMaterials.Remove(this);
					}
					this._tblMaterialType.Entity = value;
					if ((value != null))
					{
						value.tblMaterials.Add(this);
						this._TypeID = value.TypeID;
					}
					else
					{
						this._TypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblMaterialType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAreaCosts(tblAreaCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = this;
		}
		
		private void detach_tblAreaCosts(tblAreaCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = null;
		}
		
		private void attach_tblVolumeCosts(tblVolumeCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = this;
		}
		
		private void detach_tblVolumeCosts(tblVolumeCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = null;
		}
		
		private void attach_tblAtlanticCanvasAreas(tblAtlanticCanvasArea entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = this;
		}
		
		private void detach_tblAtlanticCanvasAreas(tblAtlanticCanvasArea entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = null;
		}
		
		private void attach_tblAtlanticCanvasBussCosts(tblAtlanticCanvasBussCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = this;
		}
		
		private void detach_tblAtlanticCanvasBussCosts(tblAtlanticCanvasBussCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = null;
		}
		
		private void attach_tblAtlanticCanvasLengths(tblAtlanticCanvasLength entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = this;
		}
		
		private void detach_tblAtlanticCanvasLengths(tblAtlanticCanvasLength entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = null;
		}
		
		private void attach_tblAtlanticCanvasVolumes(tblAtlanticCanvasVolume entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = this;
		}
		
		private void detach_tblAtlanticCanvasVolumes(tblAtlanticCanvasVolume entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = null;
		}
		
		private void attach_tblBussinessCosts(tblBussinessCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = this;
		}
		
		private void detach_tblBussinessCosts(tblBussinessCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = null;
		}
		
		private void attach_tblLengthCosts(tblLengthCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = this;
		}
		
		private void detach_tblLengthCosts(tblLengthCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterial = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMaterialType")]
	public partial class tblMaterialType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _MeasureType;
		
		private EntitySet<tblAreaCost> _tblAreaCosts;
		
		private EntitySet<tblVolumeCost> _tblVolumeCosts;
		
		private EntitySet<tblBussinessCost> _tblBussinessCosts;
		
		private EntitySet<tblLengthCost> _tblLengthCosts;
		
		private EntitySet<tblMaterial> _tblMaterials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnMeasureTypeChanging(string value);
    partial void OnMeasureTypeChanged();
    #endregion
		
		public tblMaterialType()
		{
			this._tblAreaCosts = new EntitySet<tblAreaCost>(new Action<tblAreaCost>(this.attach_tblAreaCosts), new Action<tblAreaCost>(this.detach_tblAreaCosts));
			this._tblVolumeCosts = new EntitySet<tblVolumeCost>(new Action<tblVolumeCost>(this.attach_tblVolumeCosts), new Action<tblVolumeCost>(this.detach_tblVolumeCosts));
			this._tblBussinessCosts = new EntitySet<tblBussinessCost>(new Action<tblBussinessCost>(this.attach_tblBussinessCosts), new Action<tblBussinessCost>(this.detach_tblBussinessCosts));
			this._tblLengthCosts = new EntitySet<tblLengthCost>(new Action<tblLengthCost>(this.attach_tblLengthCosts), new Action<tblLengthCost>(this.detach_tblLengthCosts));
			this._tblMaterials = new EntitySet<tblMaterial>(new Action<tblMaterial>(this.attach_tblMaterials), new Action<tblMaterial>(this.detach_tblMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasureType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MeasureType
		{
			get
			{
				return this._MeasureType;
			}
			set
			{
				if ((this._MeasureType != value))
				{
					this.OnMeasureTypeChanging(value);
					this.SendPropertyChanging();
					this._MeasureType = value;
					this.SendPropertyChanged("MeasureType");
					this.OnMeasureTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblAreaCost", Storage="_tblAreaCosts", ThisKey="TypeID", OtherKey="TypeID")]
		public EntitySet<tblAreaCost> tblAreaCosts
		{
			get
			{
				return this._tblAreaCosts;
			}
			set
			{
				this._tblAreaCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblVolumeCost", Storage="_tblVolumeCosts", ThisKey="TypeID", OtherKey="TypeID")]
		public EntitySet<tblVolumeCost> tblVolumeCosts
		{
			get
			{
				return this._tblVolumeCosts;
			}
			set
			{
				this._tblVolumeCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblBussinessCost", Storage="_tblBussinessCosts", ThisKey="TypeID", OtherKey="TypeID")]
		public EntitySet<tblBussinessCost> tblBussinessCosts
		{
			get
			{
				return this._tblBussinessCosts;
			}
			set
			{
				this._tblBussinessCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblLengthCost", Storage="_tblLengthCosts", ThisKey="TypeID", OtherKey="TypeID")]
		public EntitySet<tblLengthCost> tblLengthCosts
		{
			get
			{
				return this._tblLengthCosts;
			}
			set
			{
				this._tblLengthCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMaterialType_tblMaterial", Storage="_tblMaterials", ThisKey="TypeID", OtherKey="TypeID")]
		public EntitySet<tblMaterial> tblMaterials
		{
			get
			{
				return this._tblMaterials;
			}
			set
			{
				this._tblMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAreaCosts(tblAreaCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = this;
		}
		
		private void detach_tblAreaCosts(tblAreaCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = null;
		}
		
		private void attach_tblVolumeCosts(tblVolumeCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = this;
		}
		
		private void detach_tblVolumeCosts(tblVolumeCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = null;
		}
		
		private void attach_tblBussinessCosts(tblBussinessCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = this;
		}
		
		private void detach_tblBussinessCosts(tblBussinessCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = null;
		}
		
		private void attach_tblLengthCosts(tblLengthCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = this;
		}
		
		private void detach_tblLengthCosts(tblLengthCost entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = null;
		}
		
		private void attach_tblMaterials(tblMaterial entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = this;
		}
		
		private void detach_tblMaterials(tblMaterial entity)
		{
			this.SendPropertyChanging();
			entity.tblMaterialType = null;
		}
	}
}
#pragma warning restore 1591
